!function(e){"use strict";var t=function(){function e(e,t){for(var o in t){var n=t[o];n.configurable=!0,n.value&&(n.writable=!0)}Object.defineProperties(e,t)}return function(t,o,n){return o&&e(t.prototype,o),n&&e(t,n),t}}(),o=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")};!function(e){var n=e.fn.selectinput,a={id:null,dropdownClass:".dropdown .selectinput",listClass:".dropdown-menu",itemClass:".dropdown-item",toggleClass:".btn .btn-default .dropdown-toggle",toggleText:"Dropdown",toggleCaret:'<span class="caret"></span>',toggleChange:!0,autocomplete:!1,minInput:2,templates:{inputField:'<input type="text" autocomplete="false" class="form-control" />',autocompleteList:'<div class="autocomplete dropdown-menu" />',autocompleteItem:'<li><a class="item" href="#" /></li>'},onChange:function(){},onShow:function(){},onShown:function(){},onHide:function(){},onHidden:function(){},onAutocompleteSuccess:function(){},onAutocompleteError:function(){},onAutocompleteShow:function(){},onAutocompleteShown:function(){},onAutocompleteHide:function(){},onAutocompleteHidden:function(){},debug:!1},l=function(){function n(t,l){var i=this;o(i,n),l.dropdownClass=l.dropdownClass.replace(/\./g,""),l.listClass=l.listClass.replace(/\./g,""),l.itemClass=l.itemClass.replace(/\./g,""),l.toggleClass=l.toggleClass.replace(/\./g,""),i._config=e.extend({},a,t.data(),l),i._$element=t instanceof jQuery?t:e(t),i._config.id?i._widgetId="selectinput-"+i._config.id:i._widgetId="selectinput-"+Date.now().toString().substr(6),i._$element.each(function(){var t=e(this),o=i.getInputType(t);if(t.data("select")&&"select-one"!==o&&"select-multiple"!==o&&"text"!==o)console.warn("Element has not select or input field!",t);else{i._config.debug||t.css("display","none"),t.removeAttr("class"),t.attr("data-select",i._widgetId);var n=i.getInputValues(t);i.buildDropdown(t,n),i.attachBehaviors(t),i.attachOriginals(t),i._config.autocomplete&&("select-multiple"===o?console.warn("Multiple select with autocomplete not allowed!",t):i.attachAutocomplete(t))}})}return t(n,{element:{value:function(){return this._$element}},getInputType:{value:function(e){return e.get(0).type}},getInputValues:{value:function(t){var o=this,n=[],a=o.getInputType(t);return"select-one"!==a&&"select-multiple"!==a||t.find("option").each(function(){n.push({value:void 0!==e(this).attr("value")&&e(this).attr("value"),active:e(this).prop("selected"),disabled:e(this).prop("disabled"),label:e(this).text()}),!0===o._config.toggleChange&&!0===e(this).prop("selected")&&(o._config.toggleText=e(this).text())}),n}},appendItems:{value:function(t,o){var n="",a=this;o&&a.$options.empty(),e.each(t,function(e,t){t.value&&t.label?!0===t.active||!0===t.selected?n+='<li class="'+a._config.itemClass+' active"><a href="#" data-value="'+t.value+'">'+t.label+"</a></li>":!0===t.disabled?n+='<li class="'+a._config.itemClass+' disabled"><a href="#" data-value="'+t.value+'">'+t.label+"</a></li>":n+='<li class="'+a._config.itemClass+'"><a href="#" data-value="'+t.value+'">'+t.label+"</a></li>":n+='<li class="'+a._config.itemClass+'"><a href="#" data-value="'+t+'">'+t+"</a></li>"}),a.$options.append(e(n))}},attachOriginals:{value:function(t){var o=this,n=o.getInputType(t);t.on("change",function(){var t=e(this).val();if(o._config.debug&&console.log("Original select has change value to: `"+t+"`",o),t){var a="",l=o.$dropdown.find('[data-toggle="dropdown"]');if("select-multiple"===n){var i="";o.$options.find("li").removeClass("active"),e.each(t,function(e,t){var n=o.$options.find('a[data-value="'+t+'"]');n&&(n.parent("li").addClass("active"),a=a+i+n.text(),0==i.length&&(i=", "))}),a.length>0&&(o._config.autocomplete?o.$input.val(a):l.html(a+" "+o._config.toggleCaret))}else{var s=o.$options.find('a[data-value="'+t+'"]');s&&(o.$options.find("li").removeClass("active"),s.parent("li").addClass("active"),(a=s.text()).length>0&&(o._config.autocomplete?o.$input.val(a):l.html(a+" "+o._config.toggleCaret)))}}})}},attachBehaviors:{value:function(t){var o=this,n=o.getInputType(t);o.$options.find("li").on("click",function(a){a.preventDefault();var l=e(this),i=l.find("> a").text(),s=l.find("> a").data("value"),c=e(o).find('[data-toggle="dropdown"]');if(o._config.debug&&console.log("On `click` from options list:"+s+" = "+i,o),"select-multiple"===n){var r=t.val();r||(r=[]),l.hasClass("disabled")||(l.hasClass("active")?(l.removeClass("active"),r.splice(t.val().indexOf(s),1)):(l.addClass("active"),r.push(s))),t.val(r).change()}else"select-one"===n?l.hasClass("disabled")?a.stopPropagation():(o.$options.find("li").removeClass("active"),l.addClass("active"),o._config.autocomplete&&0==t.find("option[value='"+s+"']").length&&(t.prop("selectedIndex",-1),t.append(new Option(i,s,!0,!1))),t.val(s).change()):"text"===n&&(l.hasClass("disabled")?a.stopPropagation():t.val(s).change());if(o._config.debug&&console.log("Element change value to: "+t.val(),o),!0!==o._config.toggleChange||l.hasClass("disabled")||(o._config.autocomplete?i&&o.$input.val(i):i&&c.html(i+" "+o._config.toggleCaret)),!l.hasClass("disabled"))return o._config.debug&&console.log("Call `onChange` method",o),o._config.onChange.call(o)})}},buildDropdown:{value:function(t,o){var n=this.getInputType(t);this.$input=e(this._config.templates.inputField),this.$dropdown=e('<div class="'+this._config.dropdownClass+'" />');var a=e('<button class="'+this._config.toggleClass+'" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true" />');if(a.attr("id",this._selectId),t.prop("disabled")&&a.prop("disabled","disabled"),this._config.autocomplete){t.attr("id"),t.attr("name");var l=t.attr("placeholder");this._widgetId&&this.$input.data("select",this._widgetId),l&&this.$input.prop("placeholder",l),this.$dropdown.append(this.$input),a.html(this._config.toggleCaret),this.$dropdown.append(a),this.$dropdown.addClass("btn-group")}else a.html(this._config.toggleText+" "+this._config.toggleCaret),this.$dropdown.append(a);return this.$options=e('<ul class="'+this._config.listClass+'" />'),this.appendItems(o),this.$options.attr("aria-labelledby",this._selectId),this.$dropdown.append(this.$options),this.$dropdown.attr("id",this._widgetId),t.next().is(".dropdown")||t.after(this.$dropdown),"text"==n&&t.remove(),this._$element}},parseURL:{value:function(e){return new RegExp(/[?&]\w+=/).test(e)?JSON.parse('{"'+decodeURIComponent(e).replace(/"/g,'\\"').replace(/&/g,'","').replace(/=/g,'":"')+'"}'):JSON.parse('{"'+decodeURIComponent(e)+'":""}')}},encodeURL:{value:function(e){var t="",o=new RegExp(/[?&]\w+=/);for(var n in e)o.test(t)?""!=t&&(t+="&"):""!=t&&(t+="?"),""!=n&&""==encodeURIComponent(e[n])?t=n:""!=n&&""!=encodeURIComponent(e[n])&&(t+=n+"="+encodeURIComponent(e[n]));return t}},attachAutocomplete:{value:function(t){var o=this;o._callbackInProcess=!1,o.$input.on("input",function(n){var a=n.target.value.trim();if(a.length>=parseInt(o._config.minInput)&&!o._callbackInProcess){o._callbackInProcess=!0;var l=o.parseURL(o._config.autocomplete);l.value=a,l._t=Date.now(),e.ajax({url:o.encodeURL(l),success:function(n,l,i){if("object"!=typeof n&&(n=JSON.parse(n)),o._config.onAutocompleteSuccess instanceof Object&&o._config.onAutocompleteSuccess instanceof Function&&(o._config.debug&&console.log("Call `onAutocompleteSuccess` method",this),o._config.onAutocompleteSuccess.call(this)),Object.keys(n).length>0){o._config.onAutocompleteShow instanceof Object&&o._config.onAutocompleteShow instanceof Function&&(o._config.debug&&console.log("Call `onAutocompleteShow` method",this),o._config.onAutocompleteShow.call(this));var s=[];e.each(n,function(t,o){"object"==typeof o&&e.each(o,function(e,t){o=t}),o.substr(0,a.length).toUpperCase()==a.toUpperCase()&&s.push({label:"<b>"+o.substr(0,a.length)+"</b>"+o.substr(a.length),value:t})}),o.appendItems(s,!0),o.$dropdown.find('[data-toggle="dropdown"]').attr("aria-expanded","true"),o.$dropdown.addClass("open"),o.attachBehaviors(t)}else o._config.onAutocompleteHide instanceof Object&&o._config.onAutocompleteHide instanceof Function&&(o._config.debug&&console.log("Call `onAutocompleteHide` method",this),o._config.onAutocompleteHide().call(this)),o.$dropdown.find('[data-toggle="dropdown"]').attr("aria-expanded","false"),o.$dropdown.removeClass("open");o._callbackInProcess=!1},error:function(e,t,n){o._config.onAutocompleteError instanceof Object&&o._config.onAutocompleteError instanceof Function&&(o._config.debug&&console.log("Call `onAutocompleteError` method",this),o._config.onAutocompleteError.call(this)),o._callbackInProcess=!1}})}})}}},{Default:{get:function(){return a}},_jQueryInterface:{value:function(t){var o=this;return t=t||{},o.each(function(){var a=e(o),l=e.extend({},n.Default,a.data(),"object"==typeof t&&t);new n(o,l)})}}}),n}();e.fn.selectinput=l._jQueryInterface,e.fn.selectinput.Constructor=l,e.fn.selectinput.noConflict=function(){return e.fn.selectinput=n,l._jQueryInterface}}(jQuery)}(jQuery);
//# sourceMappingURL=selectinput.js.map